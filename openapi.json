{
  "openapi": "3.0.3",
  "info": {
    "title": "Simple Banking System",
    "description": "List of APIs on Simple Banking System, but only users and authentication.\nThe rest of APIs will be added later.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://helpful-gold-turkey.cyclic.app/api/v1/"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "Operations about users"
    },
    {
      "name": "auth",
      "description": "Operations about authentication"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add a new user and profile",
        "description": "Add a new users and write more about profile",
        "requestBody": {
          "description": "Add a new users and write more about profile",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "auth": [
              "write:users",
              "read:users"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Finds all users",
        "description": "Multiple status values can be provided with comma separated strings",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "auth": [
              "write:users",
              "read:users"
            ]
          }
        ]
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Find user by ID",
        "description": "Returns a single user with profile",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "auth": [
              "write:users",
              "read:users"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Updates a user with json text",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of user that needs to be updated",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of user that needs to be updated",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password of user that needs to be updated",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity_type",
            "in": "query",
            "description": "Identity type of user that needs to be updated",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity_number",
            "in": "query",
            "description": "Identity number of user that needs to be updated",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "address",
            "in": "query",
            "description": "Address of user that needs to be updated",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Deletes a user",
        "description": "delete a user",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user value"
          }
        },
        "security": [
          {
            "auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/auth/login": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Sign in form into the system",
        "description": "",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "The email for login",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      },
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Sign in to system",
        "description": "Sign in",
        "requestBody": {
          "description": "Sign in",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "auth": [
              "write:users",
              "read:users"
            ]
          }
        ]
      }
    },
    "/auth/register": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Sign up form into the system",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name to register",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "The email to sign up",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password to sign up clear text",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity_type",
            "in": "query",
            "description": "The identity type to sign up",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity_number",
            "in": "query",
            "description": "The identity number to sign up",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "query",
            "description": "The user's address to sign up",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      },
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Add a new user with profile",
        "description": "Add a new users and write more about profile",
        "requestBody": {
          "description": "Add a new users and write more about profile",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/auth/whoami": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get user data using token",
        "description": "",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "lorem ipsum"
          },
          "email": {
            "type": "string",
            "example": "lorem@ipsum"
          },
          "password": {
            "type": "string",
            "example": "123abc"
          },
          "identity_type": {
            "type": "string",
            "example": "driving licence"
          },
          "identity_number": {
            "type": "integer",
            "format": "int64",
            "example": 12345
          },
          "address": {
            "type": "string",
            "example": "lorem ipsum dolor"
          }
        },
        "xml": {
          "name": "user"
        }
      }
    },
    "requestBodies": {
      "Users": {
        "description": "User object that needs to be added",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "auth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}